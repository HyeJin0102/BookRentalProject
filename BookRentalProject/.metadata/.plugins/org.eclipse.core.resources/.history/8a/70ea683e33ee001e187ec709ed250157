package com.office.library.book.admin;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.office.library.book.BookVo;
import com.office.library.book.RentalBookVo;
import com.office.library.book.admin.util.UploadFileService;

@Controller
@RequestMapping("/book/admin")
public class BookController {
	
	@Autowired
	BookService bookService;
	
	@Autowired
	UploadFileService uploadFileService;
	//파일 업로드 하는 역할
	
	//도서등록
	@GetMapping("/registerBookForm")
	public String registerBookForm() {
		System.out.println("[BookController] registerBookForm()");
		
		String nextPage = "admin/book/register_book_form";
		
		return nextPage;
	}
	
	//도서 등록 확인
	@PostMapping("/registerBookConfirm")
	public String registerBookConfirm(BookVo bookVo, @RequestParam("file") MultipartFile file) {
		//bookVo에는 도서 정보(텍스트), MultipartFile에는 책 표지(이미지 파일)가 저장되어 있음
		System.out.println("[BookControlloer] registerBookConfirm()");
		
		String nextPage = "admin/book/register_book_ok";
		
		//파일 저장
		String savedFileName = uploadFileService.upload(file); //upload를 이용해 서버에 파일 저장
		
		if(savedFileName != null) {
			bookVo.setB_thumbnail(savedFileName);
			int result = bookService.registerBookConfirm(bookVo); //데이터베이스에 신규도서 추가
			
			if(result <= 0)
				nextPage = "admin/book/register_book_ng";
		} else {
			nextPage = "admin/book/register_book_ng";
		}
		return nextPage;
	}
	
	//도서 검색
	@GetMapping("/searchBookConfirm")
	public String searchBookConfirm(BookVo bookVo, Model model) {
		System.out.println("[UserBookController] searchBookConfirm()");
		
		String nextPage = "admin/book/search_book";
		List<BookVo> bookVos = bookService.searchBookConfirm(bookVo);
		model.addAttribute("bookVos", bookVos);
		return nextPage;
	}
	
	//도서 상세 보기
	@GetMapping("/bookDetail")
	public String bookDetail(@RequestParam("b_no") int b_no, Model model) {
		System.out.println("[BookController] bookDetail()");
		
		String nextPage = "admin/book/book_detail";
		
		BookVo bookVo = bookService.bookDetail(b_no);
		
		model.addAttribute("bookVo", bookVo);
		
		return nextPage;
	}
	
	//도서 등록
	@GetMapping("/modifyBookForm")
	public String modifyBookForm(@RequestParam("b_no") int b_no, Model model) {
		System.out.println("[BookController] bookDetail()");
		
		String nextPage = "admin/book/modify_book_form";
		
		BookVo bookVo = bookService.modifybookform(b_no);
		
		model.addAttribute("bookVo", bookVo);
		
		return nextPage;
	}
	
	//도서 수정
	@PostMapping("/modifyBookConfirm")
	public String modiftBookConfirm(BookVo bookVo, @RequestParam("file") MultipartFile file) {
		//BookVo에는 텍스트 형식의 책 정보가, MultipartFile에는 책 표지 이미지 파일이 저장되어 있음. 클라이언트에서 파일을 서버에 전송하기 위해서는 MultipartFile을 이용함
		System.out.println("[BookContoller] modifyBookConfirm()");
		
		String nextPage = "admin/book/modify_book_ok";
		
		if(!file.getOriginalFilename().equals("")) { //관리자가 표지 이미지를 변경했는지 체크
			//파일 저장
			String savedFileName = uploadFileService.upload(file);
			if(savedFileName != null)
				bookVo.setB_thumbnail(savedFileName);
		}
		
		int result = bookService.modifyBookConfirm(bookVo);
		
		if(result <= 0)
			nextPage = "admin/book/modify_book_ng";
		
		return nextPage;
	}
	
	//도서 삭제
	@GetMapping("/deleteBookConfirm")
	public String deleteBookConfirm(@RequestParam("b_no") int b_no) {
		System.out.println("[BookController] deleteBookConfirm()");
		
		String nextPage = "admin/book/delete_book_ok";
		
		int result = bookService.deleteBookConfirm(b_no);
		
		if (result <= 0)
			nextPage = "admin/book/delete_book_ng";
		
		return nextPage;
	}
	
	//대출 도서 목록
	@GetMapping("/getRentalBooks")
	public String getRentalBooks(Model model) {
		System.out.println("[BookController] getRentalBooks()");
		
		String nextPage = "admin/book/rental_books";
		
		List<RentalBookVo> rentalBookVos = bookService.getRentalBooks();
		
		model.addAttribute("rentralBookVos", rentalBookVos);
		
		return nextPage;
	}
	
	//도서 반납 확인
	@GetMapping("/returnBookVonfirm")
	public String returnBookConfirm(@RequestParam("b_no") int b_no, @RequestParam("rb_no") int rb_no) {
		System.out.println("[BookController] returnBookConfirm()");
		
		String nextPage = "admin/book/return_book_ok";
		
		int result = bookService.rentalBookConfirm(b_no, rb_no);
		
		if(result <= 0) 
			nextPage = "admin/book/return_book_ng";
		
		return nextPage;
	}
}